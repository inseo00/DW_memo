내 호스트번호 : cmd - ipconping - 검색하면 192.168.0.61 (0.61 내 호스트번호)
192.168.0.61 

12/31 


★ https://github.com/inseo00



윈도우, 리눅스(회사에서 많이 사용, 공짜이기 때문),
우분투, 
 맥OS(유닉스)
=> 운영체제(=> ***소프트웨어)

## 면접문제
형상관리 툴 (소프트웨어 버전 관리 툴) 
종류 : git, Svn

SVN git 차이점

SVN은 중앙 * 서버가 존재, git 존재 X

Server (서비스를 제공해주는 주체)
서버실에 있는 기계 장비 칭하는 말 X
서비스(웹, 앱) 서비스 제공해주면 다 서버가 됨.

commit = 저장
 
where 

git
(개인만무료) 중소                
SVN
           
 공공기관
 중앙시스템(한 곳에서 따로)


$ git config --global user.email "dldlstj6125@gmail.com"
 git config --global user.name "inseo00"

코드 비번0270

iP = 집 주소 (계속 변경됨)

git commit = 업로드

----------------------------------------------------------------------------------------------------------------

1/3



프로그램 다운로드할 때 무조건 크.롬으로 접속해서 다운로드하기 (네이버, 구글 검색 접속해서 다운 X)

Ctrl W : 인터넷 창 닫기

- 메모장, 에디터플러스, VScode, 브라켓

SQL (데이터베이스 문법)
수업기간 : 2주

SQL( Q의 약자 쿼리)을 잘하면 웹&앱 마스터 할 수 있음

상대방 PC 접속 
내 PC 검색  - 192.168.0.호스트번호 -공유폴더


내PC, 캡처도구, CMD (작업줄에 고정, 자주씀)

F12 (개발자 도구)

같은 와이파이에만 공유가능
집에서 불가능 
(Git 가능)


master : 제품으로 출시될 수 있는 브랜치

---------------------------------------------------
강사님 ip : 192.168.0.39로 변경
1/4

라우터 = 와이파이
ip를 각자 부여해줌
라우터를 거쳐서 인터넷 연결

ex) 같은 카페에서 어제와 오늘 사용한 ip는 다 다름

서브넷마스크
호스트번호/ ip를 알기위해 서브넷마스크를 알아야됌

cmd 검색 - ipconfig 검색하면 서브넷 마스크, ip 주소나옴
(192.168.0.1) 0.1이 호스트번호
서브넷 마스크가 0이 4개가될 수 없음
ex) 255.255.255.0.0.14
    호스트 번호 : 0.0.14

내PC - 오른쪽마우스 클릭 - 속성 - 고급시스템 설정 - 환경변수 - 시스템변수에 새로만들기 버튼 클릭
변수이름 : JAVA_HOME
JDK(Java Development kit)가 설치된 폴더 경로로 가기 - 설치된 경로 복사(ctrl C V) 변수 값에 저장
 - 변수이름 Path 찾기 - 편집버튼 클릭 - 새로만들기 버튼 클릭 - %JAVA_HOME%\bin\ - 확인버튼 계속 누르기 
- cmd - javac입력 -  java - version 입력

------------------------------------------------------

1/5

IP는 사설 IP 공인 IP가 있다.
IP 한 개를 여러명이 쓰는 거 = 사설 IP

로컬 (본인 PC) :
127.0.0.1 (디폴트 값)
localhost
(혼자 개발할 때 사용)

1. ip를 적으시오 / 32는 강사님 호스트 번호
ip = 192.168.0.32
      localhost (본인 ip를 의미) 

데이터베이스

데이터베이스 종류는 여러개나 문법은 동일

오라클, (MYSQL, MariaDB)

* 데이터베이스를 잘 배우면 
 (웹, 앱, IoT, 데이터분석, 보안, AI)
 공통점 : 데이터가 있어야 한다.
* 모든 어플리케이션의 시작점

port : 서버에 접속할 수 있는 문
        ( 192.168.0.32:80 )

* my SQL = 관계형 데이터베이스 (RDB)

블록체인 - 비 관계형 데이터베이스

컴퓨터 최소 단위 = 8비트
1바이트 = 8 

PK (DEPTNO) 총 3개 

데이터 조작하는 언어
ctrl 엔터 + 
순서
from - where - select

*** DDL(Date Definition Language)
CREATE TABLE <table_name> :table 생성
DROP TABLE <table_name> : table 삭제
ALTER TABLE <table _name> : table 수정 (테이블 이름 변경할 때 씀)


기술면접에 나옴
*** DML(Data Manipulation Language) 데이터 조직 언어
SELECT : 데이터 조회
DELETE : 데이터 삭제
UPDATE : 데이터 수정
INSERT : 데이터 생성

DCL (Data Control Language) 데이터 제어 언어
GRANT : 특정 사용자에게 권한 부여
REVOKE : 특정 사용자 권한 회수


-----------------------------------
1/6

데이버베이스안에 table이 있음 table 안에는 데이터

데이터를 저장하는 프로그램을 배우는 것 
=> 데이터베이스

SQL 문법을 통해서 데이터베이스에 쌓인 데이터를 가져와야함

*정보처리기사 준비 시 필수 문제
*** DDL (Data Definition Language)
    공통점 : table을 관리하는 명령어
    - CREATE
    - DROP
    - ALTER

**** DML (Data Manipulation Language)
     공통점 : table 안에 있는 데이터를 관리하는 명령어
     - select
     - DELETE
     - INSERT
     - UPDATE

DCL (Data Control Language)
공통점 : 데이터베이스 관리

데이터베이스 관계도 목록 (컬럼 & 속성이라 부름)

열쇠모양 : PK (고유데이터)

--문법

SELECT
<컬럼이름>,
<컬럼이름>,
...n

FROM
<테이블 이름>

wher <- 필터링 기능

<조건>


EMP : 테이블
MGR : 사수번호
HIREDATE : 고용날짜
SAL : 월급
COMM : 보너스
DEPTNO :부서번호
job : 직업
MGR : 해당 관리자
empno : 사원번호

조건 입력후 ctrl enter 꼭 누르기

>, <, <=, >=, = 등 을 관계연산자라고 부름
 
ex) 
    급여가 1000달러 이상인 사람의 이름과 직업 모두 조회
    select
    ename,
    job
    from EMP
    where SAL >=1000

ex) 급여가 1000달러 이상인 사람의 수와 '총 합'으로 이름 정의
select
count(*) as '총 합'
from EMP
where SAL >= 1000
 
 as : 별칭
 ( 조건 함수로 구하고 함수 명이 아니라 특정 이름 뜨게 하기)

 and : 여러 조건이 다 만족 true
 or : 여러 조건중 하나만 만족

 desc :내림차순 asc: 오름차순
 null : 값이 없음

 ex) 
 이름이 a로 시작하는 사람 조회
select 
ENAME,
job
from emp
where ENAME = 'a%'

ex)
L이 2번 들어가는 사람 조회
select 
ENAME,
job
from emp
where ENAME like '%L%L%'

order by :맨 마지막에 실행되는 문법
order by : 데이터 양이 많으면 가급적으로 사용하지않기

insert into  : 어디 테이블에 insert 할지

insert into emp
(empno, ENAME, job, MGR,HIREDATE,SAL, COMM, DEPTNO)
values
(8000,'현상원','salesman',7369,'2022-01-06',5000,1000,30)

insert 고유번호 겹치면 안됨

select
조건
함수
1. from
2. where
3. group by
4. having
5. select
6. oder by

마지막 , X

그룹바이만 되는거만 셀렉트에 와야됨

---------------------

1/7

데이터베이스 안에 테이블 안에 데이터

            select를 이용해서 데이터 가져오기 (데이터 조작)
 6일에 배움   UPDATE 
             insert
 아직안배움   DELETE 

it계열에서 데이터베이스는 기초

group by = 중복된 데이터를 제거하기 위함 
(group)

ename 은 group이 안됌
group by 할 때는 select 절에 group이 되는 컬럼이 위치.

select
<컬럼 이름>
from 테이블 이름
where 조건 식
group by 컬럼 이름

having 사용할 함수
sum, avg, min, max

order by
정렬할 컬럼 dese , asc

order by 
정렬할 컬럼의 순서써도 됌 (oeder by 2;)

연산자는 where 절에 온다.
관계 연산자 : !=, =, >, <, >=, <=
논리 연산자 : and, or
문자 연산자 : like
(문자 연산자 ex : 이름에 A로 시작하는 사람을 조회하시오
                 이름에 L이 2개 들어가는 사람을 조회하시오

null < comm > : 데이터도 없고 아무것도 없는 상태
not null 
ex) where comm is not null 

ex)
1. 부서별 직책별 최대 급여와 인원 수
2. 최소급여를 추출
3. 10번 부서제외
4. 인원 수는 3명 이하
5. 인원 수가 적은 순서

부서별, 직책별 (~~별은 group by)
최대급여와 인원 수, 최소급여를 조회(select)
10번 부서 제외 (where)
인원수는 3명 이하 (having)
인원 수가 적은 순서 (정렬) (order by)


다중이 함수
-group by
sum, avg, min, max, count


1. from (항상처음)
2. where
3. group by
4. having
5. select
6. order by (항상 마지막)

select
DEPTNO,
job,
max(sal),
count(*)
from emp
where 
DEPTNO!=10
goru

null 항목 처리/ 임시로 항목에 넣기


** ifnull : 데이터가 null인 행에 임의 데이터를 넣는다(UPDATE하는게 아님)
select
ename,
ifnull(comm, 100) *fake !
from emp

****Date_format

날짜 함수
select
Date_format(HIREDATE, '%y')
from emp


년도, 월 구하기
select
Date_format(HIREDATE, '%y-%m')
from emp

년도별 입사한 사원의 수
select
Date_format(HIREDATE,'%y'),
count(*)
from emp
Date_format(HIREDATE,'%y'),

---and, or
where 조건에 동시에 사용할 때

1. and
2. or

3. 부서가 10, 30에 속하는 사원주 급여가 1500을 넘는 사원의 이름과 급여 표시하라.

select
ename,
sal
from emp
where
(
DEPTNO=10
or
DEPTNO=30
)
and
sal>1500

----간단 문제

20번 부서 사람들 조회.

select
ENAME,
deptno
from emp
where deptno = 20

------일반 쿼리 끝

★ 고급쿼리,(Join, Subquery) ★

join : 두 개 이상의 테이블을 조회할 때 사용.
단) 조회 하고자 하는 테이블들이 관계가 있어야함.


empdp empno가 있고 dept에는 deptno가 있다

dept

관계를 맺기위해서는 FK가 필요

-- dept 조인하는 방법 1.

select 
ename
from emp e, dept d
where e.DEPTNO = d.deptno

--조인하는 방법 2.
select 
ename
from emp as e
join dept as d
on e.DEPTNO = d.DEPTNO 

join = 교집합 

dept랑 emp 교집합 된 데이터만 가져옴

프라이드 키(고유번호)

** ,로 추가하기 
 (and 사용 금지)

 ㅡㅡㅡㅡㅡㅡㅡㅡ
1/10


join : 두 개이상의 테이블을 조회할 때

조인방법 (2)

1.
select
from emp as e, dept as d 
where e.deptno = d.deptno


2. 
select
from emp as e
inner join dept as d
on e.deptno = d.deptno
inner join dw as dw
on....
where

limit : 출력되는 결과 행의 수를 제한
        사용률 높음

* 조인 종류

inner join(내부조인 혹은 조인)
=> 두 테이블을 조회할 때, 두 테이블에 모두 지정한 데이터조회
outer join(외부조인)
두 테이블을 조회할 때, 1개의 테이블에만 데이터가 있어도 조회

self join
=> 자신이 자신과 조인, 1개의 테이블 사용

** 외부 조인 종류

1. LEFT : 왼쪽 테이블의 모든 값이 출력되는 조인
2. RIGHT outer join : 오른쪽 테이블의 모든 값이 출력되는 조인
3. full outer join : 왼쪽 또는 오른쪽 테이블에 모든 값이 출력


** 문법

select
(컬럼 목록)
from <첫번째 테이블 이름>
(LEFT or RIGHT) join <두번째 테이블 이름>

on (조인 조건)
where

언제 사용?
ex) 쇼핑몰 사이트에서 회원가입은 했는데 구매이력이 없는 회원을 조회할 때
 
 