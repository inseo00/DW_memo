웹사이트 css 보기 : f12

colr 사이트 :
https://htmlcolorcodes.com/ 


** 깃허브 Add file - Upload file - Drag 칸에 파일 드래그

!누르고 tab

ex) input 태그가 3개 생김

input*3 


<table>
<thead>
<tr>
<th>이름</th>
<th>나이</th>
</tr>
</thead>
<tbody>
<tr>
<td>홍길동</td>
<td>30</td>
</tr>
</tbody>
</table>




td = 해당데이터
th 테이블 제목
thead = 게시판 제목



* ui 태그
* li 태그 

<ul> unorder list
<li>
<a href="쇼핑몰 주소">상의</a>
</li>
<li>
<a href="쇼핑몰 주소">하의</a>
</li>
<li>신발</li>
<li>모자</li>
</ul>


* ol 태그
<ol> Oder List
<li>JAVA</li>
<li>Python</li>
<li>HTML</li>
</ol>


* css 

태그마다 position을 가지고 있음.
position 디폴트 값이 static
1. static (디폴트) : 위치를 지정하지 않을 때
2. relative : 원래 자리 기준으로 움직임


________________________________________________________________________________________

2/8
**
디폴트 값 static : 움직일 수 없음

relative : 움직일 수 있음
조건) 원래 기준에서 움직임

absolute : 마음대로 움직임
(개인주의)
만약에 부모 태그가 있다면 부모 태그 기준으로 움직임.
조건 : 부모가 relative일 때만 움직인다


fixed : 고정된 위치 (상단 아이콘, 스크롤을 내릴때 마다 따라옴)



html 수업들을 때 세팅
! Enter
 <div class="container">
 </div>


*** 중요 CSS  ***

 1. position
 2. margin
 3. padding
 4. boX-size
 5. ☆ flex ☆
 6. border box

________________________________________________________________________________________
2/9

1. position 
2. static
3.relative
4. absolute
5.fixed

*부모태그 <div> 
*자식태그      <div>
              </div>
         </div>

margin, padding
공통점 :  박스 간격 조절
margin : 부모 박스와 부모박스 간격 조절
padding : 부모박스 안에 있는 자식 박스 간격 조절

div (박스 태그)

padding 작성법 : 

padding : 10px // 동서남북 10px 패딩
padding : 5px(위), 10px(오른쪽 & 왼쪽) 0; (아래)
padding : 5px(위 & 아래) 10px(오른쪽 & 왼쪽);
padding : 10px(위),20px(아래), 10px(오른쪽), 10px(왼쪽) 

padding :  자식 태그와 거리두기
           부모태그 CSS padding 작성

margin : 부모와 부모 거리두기
         부모태그 CSS margin 작성
margin : 5px(위), 10px(오른쪽 & 왼쪽) 0; (아래)
margin : 5px(위 & 아래) 10px(오른쪽 & 왼쪽);
margin : 10px(위),20px(아래), 10px(오른쪽), 10px(왼쪽) 
________________________________________________________________________________________

2/11

포지션
1-1 static : 돌
1-2 relative : 움직이는 돌
1-3 absolute 
1-4 fixed

2. padding, margin & box-size
padding : 부모와 자식 간격 조절
margin : 부모와 부모 간격 조절
<div>
<p>안녕하세요<p>
</div>


3. flex
box-size 



☆ 초기세팅
* {
        /* 브라우저마다 공백이 있음. */
        padding: 0;
        margin: 0;
        box-sizing: border-box;
      }


overflow : 컨텐츠가 너무 커서 요소내에 모두 보여주기 힘들 때 사용
overflow : visible (기본 값))
           hidden (넘치는 부분 자름)
           scroll (스크롤 바 추가)

flex : 배열
flex container 안에 아이템(item)들이 있음

검색 엔진 (SEO) : 효율적으로 검색해줌

★ 모든 태그는 div가 감싸줘야 함 ★

________________________________________________________________________________________

2/14

1. ** position **
static : 고정
relative : 원래 위치에서 이동함
absolute : 마음대로 이동
(부모 태그가 relative면 relative 기준으로 움직임 )
fixed: 고정된 위치 (스크롤 내릴 때 마다 따라옴)

2. padding : 부모 태그와 자식 태그 간격조절
margin : 부모와 부모 간격조절
box-size : border-box

3. flex (or inline-block)
flex : container와 item으로 구성(배열)
container의 길이와 item 간격을 유연하게 조절

display : fiex 
   
  ** position: absolute; 
    position: relative;

  이걸 입력해야 박스가 이동

  ________________________________________________________________________________________
  2/15

외워야 함
  position 
1. static : 고정
2. relative : 원래 위치에서 이동함
3. absolute: 마음대로 움직임
부모가 relative면 부모태그(relative) 기준으로 움직임
4. fiexd : 배열

padding : 부모와 자식 간의 간격 조절
margin : 부모와 부모 or 부모 안 자식과 자식들 간격 조절

header : 메뉴(navigation)도 오고 머리글, 사이트 로고



____________________________________________________________________________________________________________


2/16
☞ 중요 / 외.워.야함 !!☜

1.  class 이름이 있으면 앞에 .을 찍고 
    class 이름이 없으면 안찍는다

2.  padding (북, 동, 서, 남)
    padding : 부모와 자식간의 간격 조절
        
3. margin (북, 동, 서, 남)
   
4. auto : 오른쪽 왼쪽 간격 같게

5. justify-content : 플렉스 요소의 수평방향, 정렬 방식

6. space-around : 플렉스 요소 앞 뒤, 요소들  사이 모든 여유 공간

    부모 안에 자식 태그
ex)    <div class="section row">

        <div class="card"></div>
        <div class="card"></div>

      </div>

__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

2/17 
코드 이동 : Alt + 방향키


__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

2/18

HTML user name

html 경로

html/workspace/day01/index.html
=> ../../img/증명사진.png



☆★ 다른 폴더 이미지 불러오기 ☆★
../ 입력후  Ctrl Enter: 다른 폴더 이미지 불러오기

__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

2/21

flex :컨테이너와 아이템으로 구성
 (컨테이너, 아이템 기능으로 나뉨)

컨테이너는 아이템 배치 설정
아이템은 각각 아이템 크기, 넓이 설정

display : flex
justify-content : space-between

아이템 CSS 
flex-basis
flex-grow
flex

__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
 
 2/28

 여태까지 배운 html css = 정적 웹
html + css + js
 SCSS ( 기존 CSS 버전 업)

 JavaScript (버전 업데이트 빠름): 팝업창 구현, 서버 데이터 처리

JavaScript 버전 5(범용성) 

JavaScript 버전 6
* React, Angular, Vue (버전 6 이상으로 구현)

JavaScript
Node.js 설치 JavaScript 공부
바닐라js 

____________________________________________________________________________________________________________


3/2

1. item:nth-child (1)

   아이템마다 margin 값을 지정

2. display : inline-block
(flex말고 inline-block으로 가능)

IT 용어
DHCP : 아이피가 유동적으로 바뀜 (기본)
(학교, 회사, 카페 등)

Static IP :  고정 아이피
(만든 서비스를 제공할 때)

ip : 인터넷 사용하기위한 주소


※
  flex : 1차원 ul (한 방향 레이아웃)
  grid : 2차원 ul (두 방향 레이아웃)

 . (현재 경로)
.. (이전 경로)

1. 이전 폴더에서 이미지 가져오기
ex)
   ../이미지 폴더/증명사진.png

2. A폴더 안에 있는 C폴더에서 이미지 가져오기
ex)
    ../../C폴더/이미지폴더/피카츄.png

3. 현재 폴더에서 이미지 가져오기
ex)
    이미지 폴더/ A폴더/라이츄.png
   ./이미지폴더/A폴더/라이츄.png

____________________________________________________________________________________________________________

3/3


flex , grid 둘 다 container안에 item이 있는 구조

display : flex or grid

ex) 인스타그램 가진 피드 grid 로 구현

ex) 유튜브 flex

grid - gap을 이용해서 item과 item사이 간격을 조절함


____________________________________________________________________________________________________________


3/8

만들어진 차트 가져다 사용 : chart.js

cdn (Content Delivery NetWork) 
지리적 제약 없이 전 세계 사용자에게 빠르고 안전하게 콘텐츠를 전송할 수 있는 기술

인스타그램, 페이스북 등 글로벌로 진출하고자 하는 회사는 필수적인 사용 기술

canvas : html 그림 그릴 수 있는 일종의 컨테이너 태그

____________________________________________________________________________________________________________


3/10 

JSON : 데이터를 전송할 때 많이 사용되는 경량의 DATA 교환 형식 

장점 : 문서화를 할 수 있다.
       재사용 가능       
단점 : X

* DATA 형식

1. 중괄호
2. key(중복 X), value(중복 O) 구성
3. value (문자형, 정수형, 논리형, 배열, json...)
 emp:
 : 기준으로 왼쪽 Key(중복 X), 오른쪽 value 

{
  empno : 7369,
  ename : "SMITH"
  mar : [7902, 7370]
}


* SMITH사원 직업, 급여
{
  empno : 7369,
  ename : "SMITH"
  mar : [{empno : 1,
         job : "CLERK"
         Sal : 3000},}, 7370]
}


* SMITH 직업과 급여
  SMITH 부서이름
  SMITH 부서인원 수

  {
    job : "CLERK",
    sal : 1200,
    dname : "SALES"
    dnameCount : 5

  } 


* SMITH 사원번호와 급여
  SMITH 사수 3명
  SMITH 사수 번호와 직업
  {
    empno : 7369,
    sal : 1200,
    mar : [{사수번호:1, 직업:"영업"},{사수},{}]
   
  }


  ____________________________________________________________________________________________________________

  3/15

  *three.js 

  IT 의료,
  3D UI를 많이 사용하는 회사


  ____________________________________________________________________________________________________________

  3/16

  1. 내가 할 수 있는 기술 ?
  2. 우리 회사에 입사해서 기여할 수 있는게 뭐인지?


*시니어 개발자

내가 근무 했던 직장에서 매출 얼마까지 기여했는지?

** padding auto;
** a태그는 div 혹은 span


- 바닐라 js
- 제이쿼리

바닐라 js -> 제이쿼리로 넘어간 이유
기능적인 한계 (통신) 

2008년  ~ 2017 or 2018년 압도적으로 제이쿼리 사용
2018년 이후에는 React, Vue, 앵귤러
현재 제이쿼리 or React 많이 사용

